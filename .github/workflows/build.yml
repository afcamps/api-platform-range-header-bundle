name: Build

on:
  push: ~
  pull_request: ~
  workflow_dispatch: ~

jobs:
  tests:
    runs-on: ubuntu-latest

    name: "Build  PHP : ${{ matrix.php }} / APIP : ${{ matrix.api_platform }}"

    strategy:
      fail-fast: false
      matrix:
        php: ["8.0", "8.1"]
        api_platform: ["^2.7", "^3.0"]
        exclude:
          - php: "8.0"
            api_platform: "^3.0"

    env:
      APP_ENV: test
      DATABASE_URL: "mysql://root:root@127.0.0.1/test"

    steps:
      -
        uses: actions/checkout@v2

      -
        name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      -
        name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          tools: composer
          coverage: none

      -
        name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql root password: "root"

      -
        name: Cache composer
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-

      -
        name: Restrict api platform version
        if: matrix.api_platform != ''
        run: composer require "api-platform/core:${{matrix.api_platform }}" --no-update --no-scripts --no-interaction

      -
        name: Install dependencies
        run: composer install --no-interaction

      -
        name: Run PHPStan
        run: vendor/bin/phpstan analyse -c phpstan.neon.dist src/

      -
        name: Run PHP Cs Fixer
        run: vendor/bin/php-cs-fixer fix --dry-run

      -
        name: Run Behat
        run: vendor/bin/behat --colors --strict -vvv --no-interaction || vendor/bin/behat --colors --strict -vvv --no-interaction --rerun
